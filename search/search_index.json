{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"These benchmarks compare\u2026 Gson, Moshi, kotlinx serialization Reflective vs streaming APIs (via code gen) Moshi\u2019s Kotlin support (reflective or code gen for streaming APIs) Note Kotlinx serialization only works via the standard compiler plugin \u201cMinified\u201d means the JSON was minified with whitespaces between keys and values removed. Note this is only relevant for deserialization. AutoValue APIs are done via AutoValue models with the auto-value-gson/Moshi extensions, thus using generated adapters. Kotlin codegen generates Kotlin JsonAdapters. Reflection is done usually on a simple class due to limitations of instantiation. Moshi\u2019s reflection library is the exception (it can handle data class types) String serialization is a practical example, buffered input/output is likely more representative of how your stack works in terms of I/O Latest results TL;DR \u00b6 Fastest reader: Moshi Fastest writer: Moshi Speed is not everything though! Different libraries come with different trade offs. That said, these are benchmarks. Project structure \u00b6 :models - all the core models being benchmarked + json files (in resources) :jmh - JMH benchmarks :android:benchmark - Android benchmarks For each of the JMH and Android benchmarks, there are two kinds of benchmarks: A core \u201cBenchmark\u201d for pure speed comparisons A polymorphic test. In the case of this project, these tests are purely comparing Moshi\u2019s PolymorphicJsonAdapterFactory against Gson\u2019s RuntimeTypeAdapterFactory . Running locally \u00b6 JMH tests \u00b6 ./gradlew jmh -Pjmh=<File name to Run> Android tests \u00b6 ./gradlew :android:benchmark:connectedCheck You can use respective *DataParser.kt files to parse the raw results (starting with the first benchmark line after the headers).","title":"Home"},{"location":"#latest-results-tldr","text":"Fastest reader: Moshi Fastest writer: Moshi Speed is not everything though! Different libraries come with different trade offs. That said, these are benchmarks.","title":"Latest results TL;DR"},{"location":"#project-structure","text":":models - all the core models being benchmarked + json files (in resources) :jmh - JMH benchmarks :android:benchmark - Android benchmarks For each of the JMH and Android benchmarks, there are two kinds of benchmarks: A core \u201cBenchmark\u201d for pure speed comparisons A polymorphic test. In the case of this project, these tests are purely comparing Moshi\u2019s PolymorphicJsonAdapterFactory against Gson\u2019s RuntimeTypeAdapterFactory .","title":"Project structure"},{"location":"#running-locally","text":"","title":"Running locally"},{"location":"#jmh-tests","text":"./gradlew jmh -Pjmh=<File name to Run>","title":"JMH tests"},{"location":"#android-tests","text":"./gradlew :android:benchmark:connectedCheck You can use respective *DataParser.kt files to parse the raw results (starting with the first benchmark line after the headers).","title":"Android tests"},{"location":"changelog/","text":"Changelog \u00b6 2019-12-01 \u00b6 Changelog started, current state of project.","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#2019-12-01","text":"Changelog started, current state of project.","title":"2019-12-01"},{"location":"contributing/","text":"Contributing to this repo \u00b6 This project is first and foremost a simple benchmarking test project that I mostly use for periodic comparisons of Moshi, Gson, and kotlinx-serialization. In the past it\u2019s compared other serializers, but making this an exhaustive benchmarking suite of different tools is a non-goal. That said, I\u2019m not against PRs adding new tools as long as they fit the existing suite. Do\u2019s If your PR modifies or adds a benchmark, please update the benchmark results. Be sure to include your machine\u2019s tech specs. If adding a new benchmark, explain what value it\u2019s adding and why it\u2019s relevant. If modifying a benchmark, explain what issue it\u2019s resolving or benefit it\u2019s adding. If removing a benchmark, please open an issue first to discuss. Dependency updates are welcome! Don\u2019ts Add a new serialization tool without discussing in an issue first. If you want to demo one without wanting to have it merged, that\u2019s welcome and just mark it as a draft PR and then close it after.","title":"Contributing"},{"location":"contributing/#contributing-to-this-repo","text":"This project is first and foremost a simple benchmarking test project that I mostly use for periodic comparisons of Moshi, Gson, and kotlinx-serialization. In the past it\u2019s compared other serializers, but making this an exhaustive benchmarking suite of different tools is a non-goal. That said, I\u2019m not against PRs adding new tools as long as they fit the existing suite. Do\u2019s If your PR modifies or adds a benchmark, please update the benchmark results. Be sure to include your machine\u2019s tech specs. If adding a new benchmark, explain what value it\u2019s adding and why it\u2019s relevant. If modifying a benchmark, explain what issue it\u2019s resolving or benefit it\u2019s adding. If removing a benchmark, please open an issue first to discuss. Dependency updates are welcome! Don\u2019ts Add a new serialization tool without discussing in an issue first. If you want to demo one without wanting to have it merged, that\u2019s welcome and just mark it as a draft PR and then close it after.","title":"Contributing to this repo"},{"location":"results/android-polymorphic/","text":"Current raw Android polymorphic benchmark results (lower score is better) \u00b6 Run on a 15\u201d 2018 MacBook Pro. 32GB RAM, 2.9 GHz 6-Core Intel Core i9 Grouped by serialization type (read, write): Read PolymorphicBenchmark.moshi_fromJson[minified=true,typeKeyLocation=first] 5,741,043 ns PolymorphicBenchmark.moshi_fromJson[minified=false,typeKeyLocation=first] 7,726,407 ns PolymorphicBenchmark.moshi_fromJson[minified=true,typeKeyLocation=last] 9,240,001 ns PolymorphicBenchmark.gson_fromJson[minified=true,typeKeyLocation=last] 9,511,094 ns PolymorphicBenchmark.gson_fromJson[minified=true,typeKeyLocation=first] 9,530,990 ns PolymorphicBenchmark.gson_fromJson[minified=false,typeKeyLocation=first] 10,419,532 ns PolymorphicBenchmark.gson_fromJson[minified=false,typeKeyLocation=last] 10,473,907 ns PolymorphicBenchmark.moshi_fromJson[minified=false,typeKeyLocation=last] 14,063,751 ns Write PolymorphicBenchmark.moshi_toJson[minified=true,typeKeyLocation=first] 7,679,844 ns PolymorphicBenchmark.moshi_toJson[minified=true,typeKeyLocation=last] 7,688,855 ns PolymorphicBenchmark.gson_toJson[minified=true,typeKeyLocation=last] 163,759,807 ns PolymorphicBenchmark.gson_toJson[minified=true,typeKeyLocation=first] 165,742,933 ns","title":"Android polymorphic"},{"location":"results/android-polymorphic/#current-raw-android-polymorphic-benchmark-results-lower-score-is-better","text":"Run on a 15\u201d 2018 MacBook Pro. 32GB RAM, 2.9 GHz 6-Core Intel Core i9 Grouped by serialization type (read, write): Read PolymorphicBenchmark.moshi_fromJson[minified=true,typeKeyLocation=first] 5,741,043 ns PolymorphicBenchmark.moshi_fromJson[minified=false,typeKeyLocation=first] 7,726,407 ns PolymorphicBenchmark.moshi_fromJson[minified=true,typeKeyLocation=last] 9,240,001 ns PolymorphicBenchmark.gson_fromJson[minified=true,typeKeyLocation=last] 9,511,094 ns PolymorphicBenchmark.gson_fromJson[minified=true,typeKeyLocation=first] 9,530,990 ns PolymorphicBenchmark.gson_fromJson[minified=false,typeKeyLocation=first] 10,419,532 ns PolymorphicBenchmark.gson_fromJson[minified=false,typeKeyLocation=last] 10,473,907 ns PolymorphicBenchmark.moshi_fromJson[minified=false,typeKeyLocation=last] 14,063,751 ns Write PolymorphicBenchmark.moshi_toJson[minified=true,typeKeyLocation=first] 7,679,844 ns PolymorphicBenchmark.moshi_toJson[minified=true,typeKeyLocation=last] 7,688,855 ns PolymorphicBenchmark.gson_toJson[minified=true,typeKeyLocation=last] 163,759,807 ns PolymorphicBenchmark.gson_toJson[minified=true,typeKeyLocation=first] 165,742,933 ns","title":"Current raw Android polymorphic benchmark results (lower score is better)"},{"location":"results/android/","text":"Current raw Android polymorphic benchmark results (lower score is better) \u00b6 Run on a 15\u201d 2018 MacBook Pro. 32GB RAM, 2.9 GHz 6-Core Intel Core i9 Grouped by serialization type (read, write, buffered, string): Read (buffered) AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=true] 5,705,469 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] 5,735,052 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=true] 6,195,417 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=false] 7,027,032 ns AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=false] 7,641,979 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] 7,740,677 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] 8,100,000 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] 10,143,074 ns Read (string) AndroidBenchmark.gson_autovalue_string_fromJson[minified=true] 4,854,687 ns AndroidBenchmark.gson_autovalue_string_fromJson[minified=false] 5,340,678 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=true] 5,678,593 ns AndroidBenchmark.kserializer_string_fromJson[minified=true] 5,772,345 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=false] 6,346,979 ns AndroidBenchmark.kserializer_string_fromJson[minified=false] 6,430,939 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=true] 6,669,532 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] 6,673,698 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=true] 8,197,866 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=false] 8,940,730 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] 8,981,979 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] 9,024,428 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=false] 10,500,313 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] 11,272,241 ns Write (buffered) AndroidBenchmark.moshi_autovalue_buffer_toJson[minified=true] 3,760,470 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] 3,825,365 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] 7,219,272 ns AndroidBenchmark.gson_autovalue_buffer_toJson[minified=true] 160,393,974 ns Write (string) AndroidBenchmark.kserializer_string_toJson[minified=true] 5,368,125 ns AndroidBenchmark.moshi_autovalue_string_toJson[minified=true] 5,413,751 ns AndroidBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] 5,442,292 ns AndroidBenchmark.gson_autovalue_string_toJson[minified=true] 6,162,865 ns AndroidBenchmark.moshi_reflective_string_toJson[minified=true] 6,316,824 ns AndroidBenchmark.gson_reflective_string_toJson[minified=true] 7,916,772 ns AndroidBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] 8,733,439 ns Grouped by library (interesting to see how reflection vs custom adapters affects perf within a library): GSON AndroidBenchmark.gson_autovalue_string_fromJson[minified=true] 4,854,687 ns AndroidBenchmark.gson_autovalue_string_fromJson[minified=false] 5,340,678 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=true] 5,678,593 ns AndroidBenchmark.gson_autovalue_string_toJson[minified=true] 6,162,865 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=true] 6,195,417 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=false] 6,346,979 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=false] 7,027,032 ns AndroidBenchmark.gson_reflective_string_toJson[minified=true] 7,916,772 ns AndroidBenchmark.gson_autovalue_buffer_toJson[minified=true] 160,393,974 ns Kotlinx Serialization AndroidBenchmark.kserializer_string_toJson[minified=true] 5,368,125 ns AndroidBenchmark.kserializer_string_fromJson[minified=true] 5,772,345 ns AndroidBenchmark.kserializer_string_fromJson[minified=false] 6,430,939 ns Moshi AndroidBenchmark.moshi_autovalue_buffer_toJson[minified=true] 3,760,470 ns AndroidBenchmark.moshi_autovalue_string_toJson[minified=true] 5,413,751 ns AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=true] 5,705,469 ns AndroidBenchmark.moshi_reflective_string_toJson[minified=true] 6,316,824 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=true] 6,669,532 ns AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=false] 7,641,979 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=true] 8,197,866 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=false] 8,940,730 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=false] 10,500,313 ns Moshi Kotlin AndroidBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] 3,825,365 ns AndroidBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] 5,442,292 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] 5,735,052 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] 6,673,698 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] 7,219,272 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] 7,740,677 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] 8,100,000 ns AndroidBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] 8,733,439 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] 8,981,979 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] 9,024,428 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] 10,143,074 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] 11,272,241 ns","title":"Android"},{"location":"results/android/#current-raw-android-polymorphic-benchmark-results-lower-score-is-better","text":"Run on a 15\u201d 2018 MacBook Pro. 32GB RAM, 2.9 GHz 6-Core Intel Core i9 Grouped by serialization type (read, write, buffered, string): Read (buffered) AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=true] 5,705,469 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] 5,735,052 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=true] 6,195,417 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=false] 7,027,032 ns AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=false] 7,641,979 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] 7,740,677 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] 8,100,000 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] 10,143,074 ns Read (string) AndroidBenchmark.gson_autovalue_string_fromJson[minified=true] 4,854,687 ns AndroidBenchmark.gson_autovalue_string_fromJson[minified=false] 5,340,678 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=true] 5,678,593 ns AndroidBenchmark.kserializer_string_fromJson[minified=true] 5,772,345 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=false] 6,346,979 ns AndroidBenchmark.kserializer_string_fromJson[minified=false] 6,430,939 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=true] 6,669,532 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] 6,673,698 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=true] 8,197,866 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=false] 8,940,730 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] 8,981,979 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] 9,024,428 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=false] 10,500,313 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] 11,272,241 ns Write (buffered) AndroidBenchmark.moshi_autovalue_buffer_toJson[minified=true] 3,760,470 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] 3,825,365 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] 7,219,272 ns AndroidBenchmark.gson_autovalue_buffer_toJson[minified=true] 160,393,974 ns Write (string) AndroidBenchmark.kserializer_string_toJson[minified=true] 5,368,125 ns AndroidBenchmark.moshi_autovalue_string_toJson[minified=true] 5,413,751 ns AndroidBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] 5,442,292 ns AndroidBenchmark.gson_autovalue_string_toJson[minified=true] 6,162,865 ns AndroidBenchmark.moshi_reflective_string_toJson[minified=true] 6,316,824 ns AndroidBenchmark.gson_reflective_string_toJson[minified=true] 7,916,772 ns AndroidBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] 8,733,439 ns Grouped by library (interesting to see how reflection vs custom adapters affects perf within a library): GSON AndroidBenchmark.gson_autovalue_string_fromJson[minified=true] 4,854,687 ns AndroidBenchmark.gson_autovalue_string_fromJson[minified=false] 5,340,678 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=true] 5,678,593 ns AndroidBenchmark.gson_autovalue_string_toJson[minified=true] 6,162,865 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=true] 6,195,417 ns AndroidBenchmark.gson_reflective_string_fromJson[minified=false] 6,346,979 ns AndroidBenchmark.gson_autovalue_buffer_fromJson[minified=false] 7,027,032 ns AndroidBenchmark.gson_reflective_string_toJson[minified=true] 7,916,772 ns AndroidBenchmark.gson_autovalue_buffer_toJson[minified=true] 160,393,974 ns Kotlinx Serialization AndroidBenchmark.kserializer_string_toJson[minified=true] 5,368,125 ns AndroidBenchmark.kserializer_string_fromJson[minified=true] 5,772,345 ns AndroidBenchmark.kserializer_string_fromJson[minified=false] 6,430,939 ns Moshi AndroidBenchmark.moshi_autovalue_buffer_toJson[minified=true] 3,760,470 ns AndroidBenchmark.moshi_autovalue_string_toJson[minified=true] 5,413,751 ns AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=true] 5,705,469 ns AndroidBenchmark.moshi_reflective_string_toJson[minified=true] 6,316,824 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=true] 6,669,532 ns AndroidBenchmark.moshi_autovalue_buffer_fromJson[minified=false] 7,641,979 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=true] 8,197,866 ns AndroidBenchmark.moshi_autovalue_string_fromJson[minified=false] 8,940,730 ns AndroidBenchmark.moshi_reflective_string_fromJson[minified=false] 10,500,313 ns Moshi Kotlin AndroidBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] 3,825,365 ns AndroidBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] 5,442,292 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] 5,735,052 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] 6,673,698 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] 7,219,272 ns AndroidBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] 7,740,677 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] 8,100,000 ns AndroidBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] 8,733,439 ns AndroidBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] 8,981,979 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] 9,024,428 ns AndroidBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] 10,143,074 ns AndroidBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] 11,272,241 ns","title":"Current raw Android polymorphic benchmark results (lower score is better)"},{"location":"results/jmh-polymorphic/","text":"Current raw JMH polymorphic results (higher score is better) \u00b6 Run on a 15\u201d 2018 MacBook Pro. 32GB RAM, 2.9 GHz 6-Core Intel Core i9 Grouped by serialization type (read, write): Benchmark (minified) (typeKeyLocation) Mode Cnt Score Error Units PolymorphicTest.moshi_fromJson true first thrpt 25 1537.384 \u00b1 17.531 ops/s PolymorphicTest.moshi_fromJson false first thrpt 25 1085.072 \u00b1 8.002 ops/s PolymorphicTest.moshi_fromJson true last thrpt 25 955.086 \u00b1 40.841 ops/s PolymorphicTest.gson_fromJson true first thrpt 25 735.502 \u00b1 23.243 ops/s PolymorphicTest.gson_fromJson true last thrpt 25 727.168 \u00b1 18.258 ops/s PolymorphicTest.gson_fromJson false first thrpt 25 713.038 \u00b1 3.854 ops/s PolymorphicTest.gson_fromJson false last thrpt 25 696.026 \u00b1 13.284 ops/s PolymorphicTest.moshi_fromJson false last thrpt 25 606.661 \u00b1 8.519 ops/s PolymorphicTest.moshi_toJson true first thrpt 25 1726.830 \u00b1 14.515 ops/s PolymorphicTest.moshi_toJson true last thrpt 25 1703.664 \u00b1 16.337 ops/s PolymorphicTest.gson_toJson true first thrpt 25 683.573 \u00b1 14.634 ops/s PolymorphicTest.gson_toJson true last thrpt 25 658.894 \u00b1 11.774 ops/s","title":"Jmh polymorphic"},{"location":"results/jmh-polymorphic/#current-raw-jmh-polymorphic-results-higher-score-is-better","text":"Run on a 15\u201d 2018 MacBook Pro. 32GB RAM, 2.9 GHz 6-Core Intel Core i9 Grouped by serialization type (read, write): Benchmark (minified) (typeKeyLocation) Mode Cnt Score Error Units PolymorphicTest.moshi_fromJson true first thrpt 25 1537.384 \u00b1 17.531 ops/s PolymorphicTest.moshi_fromJson false first thrpt 25 1085.072 \u00b1 8.002 ops/s PolymorphicTest.moshi_fromJson true last thrpt 25 955.086 \u00b1 40.841 ops/s PolymorphicTest.gson_fromJson true first thrpt 25 735.502 \u00b1 23.243 ops/s PolymorphicTest.gson_fromJson true last thrpt 25 727.168 \u00b1 18.258 ops/s PolymorphicTest.gson_fromJson false first thrpt 25 713.038 \u00b1 3.854 ops/s PolymorphicTest.gson_fromJson false last thrpt 25 696.026 \u00b1 13.284 ops/s PolymorphicTest.moshi_fromJson false last thrpt 25 606.661 \u00b1 8.519 ops/s PolymorphicTest.moshi_toJson true first thrpt 25 1726.830 \u00b1 14.515 ops/s PolymorphicTest.moshi_toJson true last thrpt 25 1703.664 \u00b1 16.337 ops/s PolymorphicTest.gson_toJson true first thrpt 25 683.573 \u00b1 14.634 ops/s PolymorphicTest.gson_toJson true last thrpt 25 658.894 \u00b1 11.774 ops/s","title":"Current raw JMH polymorphic results (higher score is better)"},{"location":"results/jmh/","text":"Current raw JMH results (higher score is better) \u00b6 Run on a mid-2015 15\u201d Macbook Pro. 2.8 GHz Intel Core i7, 16 GB 1600 MHz DDR3 Raw Benchmark (minified) Mode Cnt Score Error Units JmhBenchmark.gson_autovalue_buffer_fromJson true thrpt 25 1525.482 \u00b1 42.836 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson false thrpt 25 1409.158 \u00b1 8.407 ops/s JmhBenchmark.gson_autovalue_buffer_toJson true thrpt 25 754.222 \u00b1 15.435 ops/s JmhBenchmark.gson_autovalue_buffer_toJson false thrpt 25 760.290 \u00b1 9.819 ops/s JmhBenchmark.gson_autovalue_string_fromJson true thrpt 25 1781.907 \u00b1 22.567 ops/s JmhBenchmark.gson_autovalue_string_fromJson false thrpt 25 1593.688 \u00b1 48.073 ops/s JmhBenchmark.gson_autovalue_string_toJson true thrpt 25 1665.459 \u00b1 91.108 ops/s JmhBenchmark.gson_autovalue_string_toJson false thrpt 25 1746.740 \u00b1 13.886 ops/s JmhBenchmark.gson_reflective_string_fromJson true thrpt 25 1886.678 \u00b1 69.660 ops/s JmhBenchmark.gson_reflective_string_fromJson false thrpt 25 1767.980 \u00b1 15.606 ops/s JmhBenchmark.gson_reflective_string_toJson true thrpt 25 1321.148 \u00b1 40.046 ops/s JmhBenchmark.gson_reflective_string_toJson false thrpt 25 1356.219 \u00b1 34.235 ops/s JmhBenchmark.kserializer_string_fromJson true thrpt 25 1560.665 \u00b1 21.197 ops/s JmhBenchmark.kserializer_string_fromJson false thrpt 25 1431.960 \u00b1 22.652 ops/s JmhBenchmark.kserializer_string_toJson true thrpt 25 1387.467 \u00b1 40.396 ops/s JmhBenchmark.kserializer_string_toJson false thrpt 25 1346.139 \u00b1 16.223 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson true thrpt 25 1599.001 \u00b1 18.123 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson false thrpt 25 1083.885 \u00b1 25.161 ops/s JmhBenchmark.moshi_autovalue_buffer_toJson true thrpt 25 1765.929 \u00b1 16.492 ops/s JmhBenchmark.moshi_autovalue_buffer_toJson false thrpt 25 1713.932 \u00b1 43.726 ops/s JmhBenchmark.moshi_autovalue_string_fromJson true thrpt 25 1403.610 \u00b1 33.427 ops/s JmhBenchmark.moshi_autovalue_string_fromJson false thrpt 25 993.052 \u00b1 30.950 ops/s JmhBenchmark.moshi_autovalue_string_toJson true thrpt 25 1502.739 \u00b1 6.458 ops/s JmhBenchmark.moshi_autovalue_string_toJson false thrpt 25 1480.423 \u00b1 28.656 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson true thrpt 25 1589.254 \u00b1 11.012 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson false thrpt 25 1070.076 \u00b1 11.175 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_toJson true thrpt 25 1857.140 \u00b1 82.876 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_toJson false thrpt 25 1751.169 \u00b1 96.660 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson true thrpt 25 1413.896 \u00b1 26.525 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson false thrpt 25 960.448 \u00b1 23.985 ops/s JmhBenchmark.moshi_kotlin_codegen_string_toJson true thrpt 25 1680.681 \u00b1 70.284 ops/s JmhBenchmark.moshi_kotlin_codegen_string_toJson false thrpt 25 1493.409 \u00b1 17.646 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson true thrpt 25 1371.793 \u00b1 12.505 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson false thrpt 25 966.614 \u00b1 13.090 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson true thrpt 25 1560.115 \u00b1 54.810 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson false thrpt 25 1579.324 \u00b1 74.541 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson true thrpt 25 1250.486 \u00b1 17.789 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson false thrpt 25 874.268 \u00b1 15.619 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson true thrpt 25 1291.330 \u00b1 12.340 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson false thrpt 25 1319.377 \u00b1 39.128 ops/s JmhBenchmark.moshi_reflective_string_fromJson true thrpt 25 1373.449 \u00b1 5.726 ops/s JmhBenchmark.moshi_reflective_string_fromJson false thrpt 25 932.438 \u00b1 16.473 ops/s JmhBenchmark.moshi_reflective_string_toJson true thrpt 25 1441.979 \u00b1 11.832 ops/s JmhBenchmark.moshi_reflective_string_toJson false thrpt 25 1503.545 \u00b1 63.463 ops/s Grouped by serialization type (read, write, buffered, string): Read (buffered) JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=true] thrpt 25 1599.001 \u00b1 18.123 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] thrpt 25 1589.254 \u00b1 11.012 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=true] thrpt 25 1525.482 \u00b1 42.836 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=false] thrpt 25 1409.158 \u00b1 8.407 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] thrpt 25 1371.793 \u00b1 12.505 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=false] thrpt 25 1083.885 \u00b1 25.161 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] thrpt 25 1070.076 \u00b1 11.175 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] thrpt 25 966.614 \u00b1 13.09 ops/s Read (string) JmhBenchmark.gson_reflective_string_fromJson[minified=true] thrpt 25 1886.678 \u00b1 69.66 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=true] thrpt 25 1781.907 \u00b1 22.567 ops/s JmhBenchmark.gson_reflective_string_fromJson[minified=false] thrpt 25 1767.98 \u00b1 15.606 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=false] thrpt 25 1593.688 \u00b1 48.073 ops/s JmhBenchmark.kserializer_string_fromJson[minified=true] thrpt 25 1560.665 \u00b1 21.197 ops/s JmhBenchmark.kserializer_string_fromJson[minified=false] thrpt 25 1431.96 \u00b1 22.652 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] thrpt 25 1413.896 \u00b1 26.525 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=true] thrpt 25 1403.61 \u00b1 33.427 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=true] thrpt 25 1373.449 \u00b1 5.726 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] thrpt 25 1250.486 \u00b1 17.789 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=false] thrpt 25 993.052 \u00b1 30.95 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] thrpt 25 960.448 \u00b1 23.985 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=false] thrpt 25 932.438 \u00b1 16.473 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] thrpt 25 874.268 \u00b1 15.619 ops/s Write (buffered) JmhBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] thrpt 25 1857.14 \u00b1 82.876 ops/s JmhBenchmark.moshi_autovalue_buffer_toJson[minified=true] thrpt 25 1765.929 \u00b1 16.492 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] thrpt 25 1560.115 \u00b1 54.81 ops/s JmhBenchmark.gson_autovalue_buffer_toJson[minified=true] thrpt 25 754.222 \u00b1 15.435 ops/s Write (string) JmhBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] thrpt 25 1680.681 \u00b1 70.284 ops/s JmhBenchmark.gson_autovalue_string_toJson[minified=true] thrpt 25 1665.459 \u00b1 91.108 ops/s JmhBenchmark.moshi_autovalue_string_toJson[minified=true] thrpt 25 1502.739 \u00b1 6.458 ops/s JmhBenchmark.moshi_reflective_string_toJson[minified=true] thrpt 25 1441.979 \u00b1 11.832 ops/s JmhBenchmark.kserializer_string_toJson[minified=true] thrpt 25 1387.467 \u00b1 40.396 ops/s JmhBenchmark.gson_reflective_string_toJson[minified=true] thrpt 25 1321.148 \u00b1 40.046 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] thrpt 25 1291.33 \u00b1 12.34 ops/s Grouped by library (interesting to see how reflection vs custom adapters affects perf within a library): GSON JmhBenchmark.gson_reflective_string_fromJson[minified=true] thrpt 25 1886.678 \u00b1 69.66 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=true] thrpt 25 1781.907 \u00b1 22.567 ops/s JmhBenchmark.gson_reflective_string_fromJson[minified=false] thrpt 25 1767.98 \u00b1 15.606 ops/s JmhBenchmark.gson_autovalue_string_toJson[minified=true] thrpt 25 1665.459 \u00b1 91.108 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=false] thrpt 25 1593.688 \u00b1 48.073 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=true] thrpt 25 1525.482 \u00b1 42.836 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=false] thrpt 25 1409.158 \u00b1 8.407 ops/s JmhBenchmark.gson_reflective_string_toJson[minified=true] thrpt 25 1321.148 \u00b1 40.046 ops/s JmhBenchmark.gson_autovalue_buffer_toJson[minified=true] thrpt 25 754.222 \u00b1 15.435 ops/s Kotlinx Serialization JmhBenchmark.kserializer_string_fromJson[minified=true] thrpt 25 1560.665 \u00b1 21.197 ops/s JmhBenchmark.kserializer_string_fromJson[minified=false] thrpt 25 1431.96 \u00b1 22.652 ops/s JmhBenchmark.kserializer_string_toJson[minified=true] thrpt 25 1387.467 \u00b1 40.396 ops/s Moshi JmhBenchmark.moshi_autovalue_buffer_toJson[minified=true] thrpt 25 1765.929 \u00b1 16.492 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=true] thrpt 25 1599.001 \u00b1 18.123 ops/s JmhBenchmark.moshi_autovalue_string_toJson[minified=true] thrpt 25 1502.739 \u00b1 6.458 ops/s JmhBenchmark.moshi_reflective_string_toJson[minified=true] thrpt 25 1441.979 \u00b1 11.832 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=true] thrpt 25 1403.61 \u00b1 33.427 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=true] thrpt 25 1373.449 \u00b1 5.726 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=false] thrpt 25 1083.885 \u00b1 25.161 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=false] thrpt 25 993.052 \u00b1 30.95 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=false] thrpt 25 932.438 \u00b1 16.473 ops/s Moshi Kotlin JmhBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] thrpt 25 1857.14 \u00b1 82.876 ops/s JmhBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] thrpt 25 1680.681 \u00b1 70.284 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] thrpt 25 1589.254 \u00b1 11.012 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] thrpt 25 1560.115 \u00b1 54.81 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] thrpt 25 1413.896 \u00b1 26.525 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] thrpt 25 1371.793 \u00b1 12.505 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] thrpt 25 1291.33 \u00b1 12.34 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] thrpt 25 1250.486 \u00b1 17.789 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] thrpt 25 1070.076 \u00b1 11.175 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] thrpt 25 966.614 \u00b1 13.09 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] thrpt 25 960.448 \u00b1 23.985 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] thrpt 25 874.268 \u00b1 15.619 ops/s","title":"Jmh"},{"location":"results/jmh/#current-raw-jmh-results-higher-score-is-better","text":"Run on a mid-2015 15\u201d Macbook Pro. 2.8 GHz Intel Core i7, 16 GB 1600 MHz DDR3 Raw Benchmark (minified) Mode Cnt Score Error Units JmhBenchmark.gson_autovalue_buffer_fromJson true thrpt 25 1525.482 \u00b1 42.836 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson false thrpt 25 1409.158 \u00b1 8.407 ops/s JmhBenchmark.gson_autovalue_buffer_toJson true thrpt 25 754.222 \u00b1 15.435 ops/s JmhBenchmark.gson_autovalue_buffer_toJson false thrpt 25 760.290 \u00b1 9.819 ops/s JmhBenchmark.gson_autovalue_string_fromJson true thrpt 25 1781.907 \u00b1 22.567 ops/s JmhBenchmark.gson_autovalue_string_fromJson false thrpt 25 1593.688 \u00b1 48.073 ops/s JmhBenchmark.gson_autovalue_string_toJson true thrpt 25 1665.459 \u00b1 91.108 ops/s JmhBenchmark.gson_autovalue_string_toJson false thrpt 25 1746.740 \u00b1 13.886 ops/s JmhBenchmark.gson_reflective_string_fromJson true thrpt 25 1886.678 \u00b1 69.660 ops/s JmhBenchmark.gson_reflective_string_fromJson false thrpt 25 1767.980 \u00b1 15.606 ops/s JmhBenchmark.gson_reflective_string_toJson true thrpt 25 1321.148 \u00b1 40.046 ops/s JmhBenchmark.gson_reflective_string_toJson false thrpt 25 1356.219 \u00b1 34.235 ops/s JmhBenchmark.kserializer_string_fromJson true thrpt 25 1560.665 \u00b1 21.197 ops/s JmhBenchmark.kserializer_string_fromJson false thrpt 25 1431.960 \u00b1 22.652 ops/s JmhBenchmark.kserializer_string_toJson true thrpt 25 1387.467 \u00b1 40.396 ops/s JmhBenchmark.kserializer_string_toJson false thrpt 25 1346.139 \u00b1 16.223 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson true thrpt 25 1599.001 \u00b1 18.123 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson false thrpt 25 1083.885 \u00b1 25.161 ops/s JmhBenchmark.moshi_autovalue_buffer_toJson true thrpt 25 1765.929 \u00b1 16.492 ops/s JmhBenchmark.moshi_autovalue_buffer_toJson false thrpt 25 1713.932 \u00b1 43.726 ops/s JmhBenchmark.moshi_autovalue_string_fromJson true thrpt 25 1403.610 \u00b1 33.427 ops/s JmhBenchmark.moshi_autovalue_string_fromJson false thrpt 25 993.052 \u00b1 30.950 ops/s JmhBenchmark.moshi_autovalue_string_toJson true thrpt 25 1502.739 \u00b1 6.458 ops/s JmhBenchmark.moshi_autovalue_string_toJson false thrpt 25 1480.423 \u00b1 28.656 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson true thrpt 25 1589.254 \u00b1 11.012 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson false thrpt 25 1070.076 \u00b1 11.175 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_toJson true thrpt 25 1857.140 \u00b1 82.876 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_toJson false thrpt 25 1751.169 \u00b1 96.660 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson true thrpt 25 1413.896 \u00b1 26.525 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson false thrpt 25 960.448 \u00b1 23.985 ops/s JmhBenchmark.moshi_kotlin_codegen_string_toJson true thrpt 25 1680.681 \u00b1 70.284 ops/s JmhBenchmark.moshi_kotlin_codegen_string_toJson false thrpt 25 1493.409 \u00b1 17.646 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson true thrpt 25 1371.793 \u00b1 12.505 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson false thrpt 25 966.614 \u00b1 13.090 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson true thrpt 25 1560.115 \u00b1 54.810 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson false thrpt 25 1579.324 \u00b1 74.541 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson true thrpt 25 1250.486 \u00b1 17.789 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson false thrpt 25 874.268 \u00b1 15.619 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson true thrpt 25 1291.330 \u00b1 12.340 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson false thrpt 25 1319.377 \u00b1 39.128 ops/s JmhBenchmark.moshi_reflective_string_fromJson true thrpt 25 1373.449 \u00b1 5.726 ops/s JmhBenchmark.moshi_reflective_string_fromJson false thrpt 25 932.438 \u00b1 16.473 ops/s JmhBenchmark.moshi_reflective_string_toJson true thrpt 25 1441.979 \u00b1 11.832 ops/s JmhBenchmark.moshi_reflective_string_toJson false thrpt 25 1503.545 \u00b1 63.463 ops/s Grouped by serialization type (read, write, buffered, string): Read (buffered) JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=true] thrpt 25 1599.001 \u00b1 18.123 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] thrpt 25 1589.254 \u00b1 11.012 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=true] thrpt 25 1525.482 \u00b1 42.836 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=false] thrpt 25 1409.158 \u00b1 8.407 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] thrpt 25 1371.793 \u00b1 12.505 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=false] thrpt 25 1083.885 \u00b1 25.161 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] thrpt 25 1070.076 \u00b1 11.175 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] thrpt 25 966.614 \u00b1 13.09 ops/s Read (string) JmhBenchmark.gson_reflective_string_fromJson[minified=true] thrpt 25 1886.678 \u00b1 69.66 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=true] thrpt 25 1781.907 \u00b1 22.567 ops/s JmhBenchmark.gson_reflective_string_fromJson[minified=false] thrpt 25 1767.98 \u00b1 15.606 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=false] thrpt 25 1593.688 \u00b1 48.073 ops/s JmhBenchmark.kserializer_string_fromJson[minified=true] thrpt 25 1560.665 \u00b1 21.197 ops/s JmhBenchmark.kserializer_string_fromJson[minified=false] thrpt 25 1431.96 \u00b1 22.652 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] thrpt 25 1413.896 \u00b1 26.525 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=true] thrpt 25 1403.61 \u00b1 33.427 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=true] thrpt 25 1373.449 \u00b1 5.726 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] thrpt 25 1250.486 \u00b1 17.789 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=false] thrpt 25 993.052 \u00b1 30.95 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] thrpt 25 960.448 \u00b1 23.985 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=false] thrpt 25 932.438 \u00b1 16.473 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] thrpt 25 874.268 \u00b1 15.619 ops/s Write (buffered) JmhBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] thrpt 25 1857.14 \u00b1 82.876 ops/s JmhBenchmark.moshi_autovalue_buffer_toJson[minified=true] thrpt 25 1765.929 \u00b1 16.492 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] thrpt 25 1560.115 \u00b1 54.81 ops/s JmhBenchmark.gson_autovalue_buffer_toJson[minified=true] thrpt 25 754.222 \u00b1 15.435 ops/s Write (string) JmhBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] thrpt 25 1680.681 \u00b1 70.284 ops/s JmhBenchmark.gson_autovalue_string_toJson[minified=true] thrpt 25 1665.459 \u00b1 91.108 ops/s JmhBenchmark.moshi_autovalue_string_toJson[minified=true] thrpt 25 1502.739 \u00b1 6.458 ops/s JmhBenchmark.moshi_reflective_string_toJson[minified=true] thrpt 25 1441.979 \u00b1 11.832 ops/s JmhBenchmark.kserializer_string_toJson[minified=true] thrpt 25 1387.467 \u00b1 40.396 ops/s JmhBenchmark.gson_reflective_string_toJson[minified=true] thrpt 25 1321.148 \u00b1 40.046 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] thrpt 25 1291.33 \u00b1 12.34 ops/s Grouped by library (interesting to see how reflection vs custom adapters affects perf within a library): GSON JmhBenchmark.gson_reflective_string_fromJson[minified=true] thrpt 25 1886.678 \u00b1 69.66 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=true] thrpt 25 1781.907 \u00b1 22.567 ops/s JmhBenchmark.gson_reflective_string_fromJson[minified=false] thrpt 25 1767.98 \u00b1 15.606 ops/s JmhBenchmark.gson_autovalue_string_toJson[minified=true] thrpt 25 1665.459 \u00b1 91.108 ops/s JmhBenchmark.gson_autovalue_string_fromJson[minified=false] thrpt 25 1593.688 \u00b1 48.073 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=true] thrpt 25 1525.482 \u00b1 42.836 ops/s JmhBenchmark.gson_autovalue_buffer_fromJson[minified=false] thrpt 25 1409.158 \u00b1 8.407 ops/s JmhBenchmark.gson_reflective_string_toJson[minified=true] thrpt 25 1321.148 \u00b1 40.046 ops/s JmhBenchmark.gson_autovalue_buffer_toJson[minified=true] thrpt 25 754.222 \u00b1 15.435 ops/s Kotlinx Serialization JmhBenchmark.kserializer_string_fromJson[minified=true] thrpt 25 1560.665 \u00b1 21.197 ops/s JmhBenchmark.kserializer_string_fromJson[minified=false] thrpt 25 1431.96 \u00b1 22.652 ops/s JmhBenchmark.kserializer_string_toJson[minified=true] thrpt 25 1387.467 \u00b1 40.396 ops/s Moshi JmhBenchmark.moshi_autovalue_buffer_toJson[minified=true] thrpt 25 1765.929 \u00b1 16.492 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=true] thrpt 25 1599.001 \u00b1 18.123 ops/s JmhBenchmark.moshi_autovalue_string_toJson[minified=true] thrpt 25 1502.739 \u00b1 6.458 ops/s JmhBenchmark.moshi_reflective_string_toJson[minified=true] thrpt 25 1441.979 \u00b1 11.832 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=true] thrpt 25 1403.61 \u00b1 33.427 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=true] thrpt 25 1373.449 \u00b1 5.726 ops/s JmhBenchmark.moshi_autovalue_buffer_fromJson[minified=false] thrpt 25 1083.885 \u00b1 25.161 ops/s JmhBenchmark.moshi_autovalue_string_fromJson[minified=false] thrpt 25 993.052 \u00b1 30.95 ops/s JmhBenchmark.moshi_reflective_string_fromJson[minified=false] thrpt 25 932.438 \u00b1 16.473 ops/s Moshi Kotlin JmhBenchmark.moshi_kotlin_codegen_buffer_toJson[minified=true] thrpt 25 1857.14 \u00b1 82.876 ops/s JmhBenchmark.moshi_kotlin_codegen_string_toJson[minified=true] thrpt 25 1680.681 \u00b1 70.284 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=true] thrpt 25 1589.254 \u00b1 11.012 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_toJson[minified=true] thrpt 25 1560.115 \u00b1 54.81 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=true] thrpt 25 1413.896 \u00b1 26.525 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=true] thrpt 25 1371.793 \u00b1 12.505 ops/s JmhBenchmark.moshi_kotlin_reflective_string_toJson[minified=true] thrpt 25 1291.33 \u00b1 12.34 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=true] thrpt 25 1250.486 \u00b1 17.789 ops/s JmhBenchmark.moshi_kotlin_codegen_buffer_fromJson[minified=false] thrpt 25 1070.076 \u00b1 11.175 ops/s JmhBenchmark.moshi_kotlin_reflective_buffer_fromJson[minified=false] thrpt 25 966.614 \u00b1 13.09 ops/s JmhBenchmark.moshi_kotlin_codegen_string_fromJson[minified=false] thrpt 25 960.448 \u00b1 23.985 ops/s JmhBenchmark.moshi_kotlin_reflective_string_fromJson[minified=false] thrpt 25 874.268 \u00b1 15.619 ops/s","title":"Current raw JMH results (higher score is better)"}]}